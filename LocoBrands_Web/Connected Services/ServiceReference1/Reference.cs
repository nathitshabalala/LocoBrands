//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LocoBrands_Web.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/LocoBrands_Service")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LocoBrands_Web.ServiceReference1.Invoice[] InvoicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string surnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int user_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int usertypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LocoBrands_Web.ServiceReference1.Invoice[] Invoices {
            get {
                return this.InvoicesField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoicesField, value) != true)) {
                    this.InvoicesField = value;
                    this.RaisePropertyChanged("Invoices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string surname {
            get {
                return this.surnameField;
            }
            set {
                if ((object.ReferenceEquals(this.surnameField, value) != true)) {
                    this.surnameField = value;
                    this.RaisePropertyChanged("surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                if ((this.user_idField.Equals(value) != true)) {
                    this.user_idField = value;
                    this.RaisePropertyChanged("user_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int usertype {
            get {
                return this.usertypeField;
            }
            set {
                if ((this.usertypeField.Equals(value) != true)) {
                    this.usertypeField = value;
                    this.RaisePropertyChanged("usertype");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Invoice", Namespace="http://schemas.datacontract.org/2004/07/LocoBrands_Service")]
    [System.SerializableAttribute()]
    public partial class Invoice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LocoBrands_Web.ServiceReference1.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime invoice_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int invoice_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal tax_amountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal total_amountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int user_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LocoBrands_Web.ServiceReference1.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime invoice_date {
            get {
                return this.invoice_dateField;
            }
            set {
                if ((this.invoice_dateField.Equals(value) != true)) {
                    this.invoice_dateField = value;
                    this.RaisePropertyChanged("invoice_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int invoice_id {
            get {
                return this.invoice_idField;
            }
            set {
                if ((this.invoice_idField.Equals(value) != true)) {
                    this.invoice_idField = value;
                    this.RaisePropertyChanged("invoice_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal tax_amount {
            get {
                return this.tax_amountField;
            }
            set {
                if ((this.tax_amountField.Equals(value) != true)) {
                    this.tax_amountField = value;
                    this.RaisePropertyChanged("tax_amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal total_amount {
            get {
                return this.total_amountField;
            }
            set {
                if ((this.total_amountField.Equals(value) != true)) {
                    this.total_amountField = value;
                    this.RaisePropertyChanged("total_amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                if ((this.user_idField.Equals(value) != true)) {
                    this.user_idField = value;
                    this.RaisePropertyChanged("user_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/LocoBrands_Service")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LocoBrands_Web.ServiceReference1.CartItem[] CartItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string brandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string categoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string imageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int product_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string product_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int stock_quantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LocoBrands_Web.ServiceReference1.CartItem[] CartItems {
            get {
                return this.CartItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.CartItemsField, value) != true)) {
                    this.CartItemsField = value;
                    this.RaisePropertyChanged("CartItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string brand {
            get {
                return this.brandField;
            }
            set {
                if ((object.ReferenceEquals(this.brandField, value) != true)) {
                    this.brandField = value;
                    this.RaisePropertyChanged("brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string category {
            get {
                return this.categoryField;
            }
            set {
                if ((object.ReferenceEquals(this.categoryField, value) != true)) {
                    this.categoryField = value;
                    this.RaisePropertyChanged("category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string image {
            get {
                return this.imageField;
            }
            set {
                if ((object.ReferenceEquals(this.imageField, value) != true)) {
                    this.imageField = value;
                    this.RaisePropertyChanged("image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int product_id {
            get {
                return this.product_idField;
            }
            set {
                if ((this.product_idField.Equals(value) != true)) {
                    this.product_idField = value;
                    this.RaisePropertyChanged("product_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string product_name {
            get {
                return this.product_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.product_nameField, value) != true)) {
                    this.product_nameField = value;
                    this.RaisePropertyChanged("product_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int stock_quantity {
            get {
                return this.stock_quantityField;
            }
            set {
                if ((this.stock_quantityField.Equals(value) != true)) {
                    this.stock_quantityField = value;
                    this.RaisePropertyChanged("stock_quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CartItem", Namespace="http://schemas.datacontract.org/2004/07/LocoBrands_Service")]
    [System.SerializableAttribute()]
    public partial class CartItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LocoBrands_Web.ServiceReference1.Product ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LocoBrands_Web.ServiceReference1.ShoppingCart ShoppingCartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int cart_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int cartitem_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int product_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LocoBrands_Web.ServiceReference1.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LocoBrands_Web.ServiceReference1.ShoppingCart ShoppingCart {
            get {
                return this.ShoppingCartField;
            }
            set {
                if ((object.ReferenceEquals(this.ShoppingCartField, value) != true)) {
                    this.ShoppingCartField = value;
                    this.RaisePropertyChanged("ShoppingCart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int cart_id {
            get {
                return this.cart_idField;
            }
            set {
                if ((this.cart_idField.Equals(value) != true)) {
                    this.cart_idField = value;
                    this.RaisePropertyChanged("cart_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int cartitem_id {
            get {
                return this.cartitem_idField;
            }
            set {
                if ((this.cartitem_idField.Equals(value) != true)) {
                    this.cartitem_idField = value;
                    this.RaisePropertyChanged("cartitem_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int product_id {
            get {
                return this.product_idField;
            }
            set {
                if ((this.product_idField.Equals(value) != true)) {
                    this.product_idField = value;
                    this.RaisePropertyChanged("product_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quantity {
            get {
                return this.quantityField;
            }
            set {
                if ((this.quantityField.Equals(value) != true)) {
                    this.quantityField = value;
                    this.RaisePropertyChanged("quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShoppingCart", Namespace="http://schemas.datacontract.org/2004/07/LocoBrands_Service")]
    [System.SerializableAttribute()]
    public partial class ShoppingCart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LocoBrands_Web.ServiceReference1.CartItem[] CartItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int cart_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int user_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LocoBrands_Web.ServiceReference1.CartItem[] CartItems {
            get {
                return this.CartItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.CartItemsField, value) != true)) {
                    this.CartItemsField = value;
                    this.RaisePropertyChanged("CartItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int cart_id {
            get {
                return this.cart_idField;
            }
            set {
                if ((this.cart_idField.Equals(value) != true)) {
                    this.cart_idField = value;
                    this.RaisePropertyChanged("cart_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                if ((this.user_idField.Equals(value) != true)) {
                    this.user_idField = value;
                    this.RaisePropertyChanged("user_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUsers", ReplyAction="http://tempuri.org/IService1/GetAllUsersResponse")]
        LocoBrands_Web.ServiceReference1.User[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUsers", ReplyAction="http://tempuri.org/IService1/GetAllUsersResponse")]
        System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.User[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserById", ReplyAction="http://tempuri.org/IService1/GetUserByIdResponse")]
        LocoBrands_Web.ServiceReference1.User GetUserById(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserById", ReplyAction="http://tempuri.org/IService1/GetUserByIdResponse")]
        System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.User> GetUserByIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateUser", ReplyAction="http://tempuri.org/IService1/CreateUserResponse")]
        bool CreateUser(string name, string surname, string password, string email, int usertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateUser", ReplyAction="http://tempuri.org/IService1/CreateUserResponse")]
        System.Threading.Tasks.Task<bool> CreateUserAsync(string name, string surname, string password, string email, int usertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoginUser", ReplyAction="http://tempuri.org/IService1/LoginUserResponse")]
        int LoginUser(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoginUser", ReplyAction="http://tempuri.org/IService1/LoginUserResponse")]
        System.Threading.Tasks.Task<int> LoginUserAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUser", ReplyAction="http://tempuri.org/IService1/UpdateUserResponse")]
        bool UpdateUser(int userId, string password, string email, int usertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUser", ReplyAction="http://tempuri.org/IService1/UpdateUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserAsync(int userId, string password, string email, int usertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        bool DeleteUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsManager", ReplyAction="http://tempuri.org/IService1/IsManagerResponse")]
        bool IsManager(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsManager", ReplyAction="http://tempuri.org/IService1/IsManagerResponse")]
        System.Threading.Tasks.Task<bool> IsManagerAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllProducts", ReplyAction="http://tempuri.org/IService1/GetAllProductsResponse")]
        LocoBrands_Web.ServiceReference1.Product[] GetAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllProducts", ReplyAction="http://tempuri.org/IService1/GetAllProductsResponse")]
        System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.Product[]> GetAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductById", ReplyAction="http://tempuri.org/IService1/GetProductByIdResponse")]
        LocoBrands_Web.ServiceReference1.Product GetProductById(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductById", ReplyAction="http://tempuri.org/IService1/GetProductByIdResponse")]
        System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.Product> GetProductByIdAsync(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateProduct", ReplyAction="http://tempuri.org/IService1/CreateProductResponse")]
        bool CreateProduct(string product_name, string description, string category, string brand, decimal price, int stock_quantity, string image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateProduct", ReplyAction="http://tempuri.org/IService1/CreateProductResponse")]
        System.Threading.Tasks.Task<bool> CreateProductAsync(string product_name, string description, string category, string brand, decimal price, int stock_quantity, string image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProduct", ReplyAction="http://tempuri.org/IService1/UpdateProductResponse")]
        bool UpdateProduct(int productId, string product_name, string description, string category, string brand, decimal price, int stock_quantity, string image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProduct", ReplyAction="http://tempuri.org/IService1/UpdateProductResponse")]
        System.Threading.Tasks.Task<bool> UpdateProductAsync(int productId, string product_name, string description, string category, string brand, decimal price, int stock_quantity, string image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProduct", ReplyAction="http://tempuri.org/IService1/DeleteProductResponse")]
        bool DeleteProduct(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProduct", ReplyAction="http://tempuri.org/IService1/DeleteProductResponse")]
        System.Threading.Tasks.Task<bool> DeleteProductAsync(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductByCategory", ReplyAction="http://tempuri.org/IService1/GetProductByCategoryResponse")]
        LocoBrands_Web.ServiceReference1.Product[] GetProductByCategory(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductByCategory", ReplyAction="http://tempuri.org/IService1/GetProductByCategoryResponse")]
        System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.Product[]> GetProductByCategoryAsync(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductByBrand", ReplyAction="http://tempuri.org/IService1/GetProductByBrandResponse")]
        LocoBrands_Web.ServiceReference1.Product[] GetProductByBrand(string brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductByBrand", ReplyAction="http://tempuri.org/IService1/GetProductByBrandResponse")]
        System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.Product[]> GetProductByBrandAsync(string brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllShoppingCarts", ReplyAction="http://tempuri.org/IService1/GetAllShoppingCartsResponse")]
        LocoBrands_Web.ServiceReference1.ShoppingCart[] GetAllShoppingCarts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllShoppingCarts", ReplyAction="http://tempuri.org/IService1/GetAllShoppingCartsResponse")]
        System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.ShoppingCart[]> GetAllShoppingCartsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetShoppingCartById", ReplyAction="http://tempuri.org/IService1/GetShoppingCartByIdResponse")]
        LocoBrands_Web.ServiceReference1.ShoppingCart GetShoppingCartById(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetShoppingCartById", ReplyAction="http://tempuri.org/IService1/GetShoppingCartByIdResponse")]
        System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.ShoppingCart> GetShoppingCartByIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateShoppingCart", ReplyAction="http://tempuri.org/IService1/CreateShoppingCartResponse")]
        bool CreateShoppingCart(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateShoppingCart", ReplyAction="http://tempuri.org/IService1/CreateShoppingCartResponse")]
        System.Threading.Tasks.Task<bool> CreateShoppingCartAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateShoppingCart", ReplyAction="http://tempuri.org/IService1/UpdateShoppingCartResponse")]
        bool UpdateShoppingCart(int cartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateShoppingCart", ReplyAction="http://tempuri.org/IService1/UpdateShoppingCartResponse")]
        System.Threading.Tasks.Task<bool> UpdateShoppingCartAsync(int cartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteShoppingCart", ReplyAction="http://tempuri.org/IService1/DeleteShoppingCartResponse")]
        bool DeleteShoppingCart(int cartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteShoppingCart", ReplyAction="http://tempuri.org/IService1/DeleteShoppingCartResponse")]
        System.Threading.Tasks.Task<bool> DeleteShoppingCartAsync(int cartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllInvoices", ReplyAction="http://tempuri.org/IService1/GetAllInvoicesResponse")]
        LocoBrands_Web.ServiceReference1.Invoice[] GetAllInvoices(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllInvoices", ReplyAction="http://tempuri.org/IService1/GetAllInvoicesResponse")]
        System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.Invoice[]> GetAllInvoicesAsync(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInvoiceById", ReplyAction="http://tempuri.org/IService1/GetInvoiceByIdResponse")]
        LocoBrands_Web.ServiceReference1.Invoice GetInvoiceById(int invoiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInvoiceById", ReplyAction="http://tempuri.org/IService1/GetInvoiceByIdResponse")]
        System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.Invoice> GetInvoiceByIdAsync(int invoiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateInvoice", ReplyAction="http://tempuri.org/IService1/CreateInvoiceResponse")]
        bool CreateInvoice(int userId, System.DateTime invoice_date, decimal total_amount, decimal tax_amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateInvoice", ReplyAction="http://tempuri.org/IService1/CreateInvoiceResponse")]
        System.Threading.Tasks.Task<bool> CreateInvoiceAsync(int userId, System.DateTime invoice_date, decimal total_amount, decimal tax_amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateInvoice", ReplyAction="http://tempuri.org/IService1/UpdateInvoiceResponse")]
        bool UpdateInvoice(int invoiceId, System.DateTime invoice_date, decimal total_amount, decimal tax_amount, string payment_method);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateInvoice", ReplyAction="http://tempuri.org/IService1/UpdateInvoiceResponse")]
        System.Threading.Tasks.Task<bool> UpdateInvoiceAsync(int invoiceId, System.DateTime invoice_date, decimal total_amount, decimal tax_amount, string payment_method);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteInvoice", ReplyAction="http://tempuri.org/IService1/DeleteInvoiceResponse")]
        bool DeleteInvoice(int invoiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteInvoice", ReplyAction="http://tempuri.org/IService1/DeleteInvoiceResponse")]
        System.Threading.Tasks.Task<bool> DeleteInvoiceAsync(int invoiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCartItemsByCartId", ReplyAction="http://tempuri.org/IService1/GetCartItemsByCartIdResponse")]
        LocoBrands_Web.ServiceReference1.CartItem[] GetCartItemsByCartId(int cartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCartItemsByCartId", ReplyAction="http://tempuri.org/IService1/GetCartItemsByCartIdResponse")]
        System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.CartItem[]> GetCartItemsByCartIdAsync(int cartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCartItem", ReplyAction="http://tempuri.org/IService1/AddCartItemResponse")]
        bool AddCartItem(int cartId, int productId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCartItem", ReplyAction="http://tempuri.org/IService1/AddCartItemResponse")]
        System.Threading.Tasks.Task<bool> AddCartItemAsync(int cartId, int productId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCartItem", ReplyAction="http://tempuri.org/IService1/UpdateCartItemResponse")]
        bool UpdateCartItem(int cartItemId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCartItem", ReplyAction="http://tempuri.org/IService1/UpdateCartItemResponse")]
        System.Threading.Tasks.Task<bool> UpdateCartItemAsync(int cartItemId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveCartItem", ReplyAction="http://tempuri.org/IService1/RemoveCartItemResponse")]
        bool RemoveCartItem(int cartItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveCartItem", ReplyAction="http://tempuri.org/IService1/RemoveCartItemResponse")]
        System.Threading.Tasks.Task<bool> RemoveCartItemAsync(int cartItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductsByPriceLowToHigh", ReplyAction="http://tempuri.org/IService1/GetProductsByPriceLowToHighResponse")]
        LocoBrands_Web.ServiceReference1.Product[] GetProductsByPriceLowToHigh();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductsByPriceLowToHigh", ReplyAction="http://tempuri.org/IService1/GetProductsByPriceLowToHighResponse")]
        System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.Product[]> GetProductsByPriceLowToHighAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductsByPriceHighToLow", ReplyAction="http://tempuri.org/IService1/GetProductsByPriceHighToLowResponse")]
        LocoBrands_Web.ServiceReference1.Product[] GetProductsByPriceHighToLow();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductsByPriceHighToLow", ReplyAction="http://tempuri.org/IService1/GetProductsByPriceHighToLowResponse")]
        System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.Product[]> GetProductsByPriceHighToLowAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : LocoBrands_Web.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<LocoBrands_Web.ServiceReference1.IService1>, LocoBrands_Web.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public LocoBrands_Web.ServiceReference1.User[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.User[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public LocoBrands_Web.ServiceReference1.User GetUserById(int userId) {
            return base.Channel.GetUserById(userId);
        }
        
        public System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.User> GetUserByIdAsync(int userId) {
            return base.Channel.GetUserByIdAsync(userId);
        }
        
        public bool CreateUser(string name, string surname, string password, string email, int usertype) {
            return base.Channel.CreateUser(name, surname, password, email, usertype);
        }
        
        public System.Threading.Tasks.Task<bool> CreateUserAsync(string name, string surname, string password, string email, int usertype) {
            return base.Channel.CreateUserAsync(name, surname, password, email, usertype);
        }
        
        public int LoginUser(string email, string password) {
            return base.Channel.LoginUser(email, password);
        }
        
        public System.Threading.Tasks.Task<int> LoginUserAsync(string email, string password) {
            return base.Channel.LoginUserAsync(email, password);
        }
        
        public bool UpdateUser(int userId, string password, string email, int usertype) {
            return base.Channel.UpdateUser(userId, password, email, usertype);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserAsync(int userId, string password, string email, int usertype) {
            return base.Channel.UpdateUserAsync(userId, password, email, usertype);
        }
        
        public bool DeleteUser(int userId) {
            return base.Channel.DeleteUser(userId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(int userId) {
            return base.Channel.DeleteUserAsync(userId);
        }
        
        public bool IsManager(int userId) {
            return base.Channel.IsManager(userId);
        }
        
        public System.Threading.Tasks.Task<bool> IsManagerAsync(int userId) {
            return base.Channel.IsManagerAsync(userId);
        }
        
        public LocoBrands_Web.ServiceReference1.Product[] GetAllProducts() {
            return base.Channel.GetAllProducts();
        }
        
        public System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.Product[]> GetAllProductsAsync() {
            return base.Channel.GetAllProductsAsync();
        }
        
        public LocoBrands_Web.ServiceReference1.Product GetProductById(int productId) {
            return base.Channel.GetProductById(productId);
        }
        
        public System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.Product> GetProductByIdAsync(int productId) {
            return base.Channel.GetProductByIdAsync(productId);
        }
        
        public bool CreateProduct(string product_name, string description, string category, string brand, decimal price, int stock_quantity, string image) {
            return base.Channel.CreateProduct(product_name, description, category, brand, price, stock_quantity, image);
        }
        
        public System.Threading.Tasks.Task<bool> CreateProductAsync(string product_name, string description, string category, string brand, decimal price, int stock_quantity, string image) {
            return base.Channel.CreateProductAsync(product_name, description, category, brand, price, stock_quantity, image);
        }
        
        public bool UpdateProduct(int productId, string product_name, string description, string category, string brand, decimal price, int stock_quantity, string image) {
            return base.Channel.UpdateProduct(productId, product_name, description, category, brand, price, stock_quantity, image);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateProductAsync(int productId, string product_name, string description, string category, string brand, decimal price, int stock_quantity, string image) {
            return base.Channel.UpdateProductAsync(productId, product_name, description, category, brand, price, stock_quantity, image);
        }
        
        public bool DeleteProduct(int productId) {
            return base.Channel.DeleteProduct(productId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteProductAsync(int productId) {
            return base.Channel.DeleteProductAsync(productId);
        }
        
        public LocoBrands_Web.ServiceReference1.Product[] GetProductByCategory(string category) {
            return base.Channel.GetProductByCategory(category);
        }
        
        public System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.Product[]> GetProductByCategoryAsync(string category) {
            return base.Channel.GetProductByCategoryAsync(category);
        }
        
        public LocoBrands_Web.ServiceReference1.Product[] GetProductByBrand(string brand) {
            return base.Channel.GetProductByBrand(brand);
        }
        
        public System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.Product[]> GetProductByBrandAsync(string brand) {
            return base.Channel.GetProductByBrandAsync(brand);
        }
        
        public LocoBrands_Web.ServiceReference1.ShoppingCart[] GetAllShoppingCarts() {
            return base.Channel.GetAllShoppingCarts();
        }
        
        public System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.ShoppingCart[]> GetAllShoppingCartsAsync() {
            return base.Channel.GetAllShoppingCartsAsync();
        }
        
        public LocoBrands_Web.ServiceReference1.ShoppingCart GetShoppingCartById(int userId) {
            return base.Channel.GetShoppingCartById(userId);
        }
        
        public System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.ShoppingCart> GetShoppingCartByIdAsync(int userId) {
            return base.Channel.GetShoppingCartByIdAsync(userId);
        }
        
        public bool CreateShoppingCart(int userId) {
            return base.Channel.CreateShoppingCart(userId);
        }
        
        public System.Threading.Tasks.Task<bool> CreateShoppingCartAsync(int userId) {
            return base.Channel.CreateShoppingCartAsync(userId);
        }
        
        public bool UpdateShoppingCart(int cartId) {
            return base.Channel.UpdateShoppingCart(cartId);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateShoppingCartAsync(int cartId) {
            return base.Channel.UpdateShoppingCartAsync(cartId);
        }
        
        public bool DeleteShoppingCart(int cartId) {
            return base.Channel.DeleteShoppingCart(cartId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteShoppingCartAsync(int cartId) {
            return base.Channel.DeleteShoppingCartAsync(cartId);
        }
        
        public LocoBrands_Web.ServiceReference1.Invoice[] GetAllInvoices(string userID) {
            return base.Channel.GetAllInvoices(userID);
        }
        
        public System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.Invoice[]> GetAllInvoicesAsync(string userID) {
            return base.Channel.GetAllInvoicesAsync(userID);
        }
        
        public LocoBrands_Web.ServiceReference1.Invoice GetInvoiceById(int invoiceId) {
            return base.Channel.GetInvoiceById(invoiceId);
        }
        
        public System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.Invoice> GetInvoiceByIdAsync(int invoiceId) {
            return base.Channel.GetInvoiceByIdAsync(invoiceId);
        }
        
        public bool CreateInvoice(int userId, System.DateTime invoice_date, decimal total_amount, decimal tax_amount) {
            return base.Channel.CreateInvoice(userId, invoice_date, total_amount, tax_amount);
        }
        
        public System.Threading.Tasks.Task<bool> CreateInvoiceAsync(int userId, System.DateTime invoice_date, decimal total_amount, decimal tax_amount) {
            return base.Channel.CreateInvoiceAsync(userId, invoice_date, total_amount, tax_amount);
        }
        
        public bool UpdateInvoice(int invoiceId, System.DateTime invoice_date, decimal total_amount, decimal tax_amount, string payment_method) {
            return base.Channel.UpdateInvoice(invoiceId, invoice_date, total_amount, tax_amount, payment_method);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateInvoiceAsync(int invoiceId, System.DateTime invoice_date, decimal total_amount, decimal tax_amount, string payment_method) {
            return base.Channel.UpdateInvoiceAsync(invoiceId, invoice_date, total_amount, tax_amount, payment_method);
        }
        
        public bool DeleteInvoice(int invoiceId) {
            return base.Channel.DeleteInvoice(invoiceId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteInvoiceAsync(int invoiceId) {
            return base.Channel.DeleteInvoiceAsync(invoiceId);
        }
        
        public LocoBrands_Web.ServiceReference1.CartItem[] GetCartItemsByCartId(int cartId) {
            return base.Channel.GetCartItemsByCartId(cartId);
        }
        
        public System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.CartItem[]> GetCartItemsByCartIdAsync(int cartId) {
            return base.Channel.GetCartItemsByCartIdAsync(cartId);
        }
        
        public bool AddCartItem(int cartId, int productId, int quantity) {
            return base.Channel.AddCartItem(cartId, productId, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> AddCartItemAsync(int cartId, int productId, int quantity) {
            return base.Channel.AddCartItemAsync(cartId, productId, quantity);
        }
        
        public bool UpdateCartItem(int cartItemId, int quantity) {
            return base.Channel.UpdateCartItem(cartItemId, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCartItemAsync(int cartItemId, int quantity) {
            return base.Channel.UpdateCartItemAsync(cartItemId, quantity);
        }
        
        public bool RemoveCartItem(int cartItemId) {
            return base.Channel.RemoveCartItem(cartItemId);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveCartItemAsync(int cartItemId) {
            return base.Channel.RemoveCartItemAsync(cartItemId);
        }
        
        public LocoBrands_Web.ServiceReference1.Product[] GetProductsByPriceLowToHigh() {
            return base.Channel.GetProductsByPriceLowToHigh();
        }
        
        public System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.Product[]> GetProductsByPriceLowToHighAsync() {
            return base.Channel.GetProductsByPriceLowToHighAsync();
        }
        
        public LocoBrands_Web.ServiceReference1.Product[] GetProductsByPriceHighToLow() {
            return base.Channel.GetProductsByPriceHighToLow();
        }
        
        public System.Threading.Tasks.Task<LocoBrands_Web.ServiceReference1.Product[]> GetProductsByPriceHighToLowAsync() {
            return base.Channel.GetProductsByPriceHighToLowAsync();
        }
    }
}
